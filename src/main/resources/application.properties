logging.level.root=debug
logging.level.org.springframework.boot.autoconfigure=ERROR

# graphql
# graphiql(그래프큐엘 자동 문서화) 사용 유무
spring.graphql.graphiql.enabled=true
# cors설정
spring.graphql.cors.allowed-origins=\*
# graphql 스키마 정보 노출 유무
spring.graphql.schema.printer.enabled=true

# jpa
# 하이버네이트 생성 쿼리문 콘솔 노출 유무
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# ddl-auto 각 설정값별 내용 숙지 필요(운영(production)환경에서는 validate or none만 사용)
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.open-in-view=false
# data.sql, scchema.sql 파일 정보 세팅
spring.jpa.defer-datasource-initialization=true


# resilience4j
# 각 속성 정보 wiki 확인(https://wiki.danawa.com/display/RNDCENTER/Resilience4j+-+CircuitBreaker)
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.slowCallRateThreshold=80
resilience4j.circuitbreaker.configs.default.slowCallDurationThreshold=1000
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=5
resilience4j.circuitbreaker.configs.default.maxWaitDurationInHalfOpenState=5000
resilience4j.circuitbreaker.configs.default.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=10
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5000
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
# 인스턴스 설정
resilience4j.circuitbreaker.instances.circuitBreaker.baseConfig=default

# actuator
# 노출 엔드포인트 설정(*: 전체 노출)
management.endpoints.web.exposure.include=*
# 세부 정보 노출 설정
management.endpoint.health.show-details=always
# actuator 정보에 서킷브레이커 상태 노출 여부
management.health.circuitbreakers.enabled=true



# h2
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.sql.init.mode=embedded
spring.sql.init.schema-locations=classpath:db/schema.sql
spring.sql.init.data-locations=classpath:db/data.sql

spring.datasource.hikari.jdbc-url=jdbc:h2:mem:product-db
spring.datasource.hikari.driver-class-name=org.h2.Driver
spring.datasource.hikari.username=sa
spring.datasource.hikari.password=

spring.datasource.hikari.pool-name=product-HikariCP
spring.datasource.hikari.maximum-pool-size=10
# 10m
spring.datasource.hikari.max-lifetime=600000
# 캐시 사용 여부
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
# 연결당 캐시할 statement 수
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
# 캐시할 sql 최대 길이
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
#